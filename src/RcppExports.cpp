// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// grad0cpp_conti_int
arma::vec grad0cpp_conti_int(arma::vec w, arma::vec beta, arma::vec mu, double rho, double alpha, double rho1, arma::mat X, arma::mat Y, arma::mat white_coefs, int idx_intcpt, int n_resps, double n_obs, double n_nodes, int n_coefs, arma::mat Sr, arma::mat Se);
RcppExport SEXP _noteargis_grad0cpp_conti_int(SEXP wSEXP, SEXP betaSEXP, SEXP muSEXP, SEXP rhoSEXP, SEXP alphaSEXP, SEXP rho1SEXP, SEXP XSEXP, SEXP YSEXP, SEXP white_coefsSEXP, SEXP idx_intcptSEXP, SEXP n_respsSEXP, SEXP n_obsSEXP, SEXP n_nodesSEXP, SEXP n_coefsSEXP, SEXP SrSEXP, SEXP SeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type rho1(rho1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type white_coefs(white_coefsSEXP);
    Rcpp::traits::input_parameter< int >::type idx_intcpt(idx_intcptSEXP);
    Rcpp::traits::input_parameter< int >::type n_resps(n_respsSEXP);
    Rcpp::traits::input_parameter< double >::type n_obs(n_obsSEXP);
    Rcpp::traits::input_parameter< double >::type n_nodes(n_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type n_coefs(n_coefsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sr(SrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Se(SeSEXP);
    rcpp_result_gen = Rcpp::wrap(grad0cpp_conti_int(w, beta, mu, rho, alpha, rho1, X, Y, white_coefs, idx_intcpt, n_resps, n_obs, n_nodes, n_coefs, Sr, Se));
    return rcpp_result_gen;
END_RCPP
}
// grad0cpp_conti_noint
arma::vec grad0cpp_conti_noint(arma::vec w, arma::vec beta, arma::vec mu, double rho, double alpha, double rho1, arma::mat X, arma::mat Y, arma::mat white_coefs, int idx_intcpt, int n_resps, double n_obs, double n_nodes, int n_coefs, arma::mat Sr, arma::mat Se);
RcppExport SEXP _noteargis_grad0cpp_conti_noint(SEXP wSEXP, SEXP betaSEXP, SEXP muSEXP, SEXP rhoSEXP, SEXP alphaSEXP, SEXP rho1SEXP, SEXP XSEXP, SEXP YSEXP, SEXP white_coefsSEXP, SEXP idx_intcptSEXP, SEXP n_respsSEXP, SEXP n_obsSEXP, SEXP n_nodesSEXP, SEXP n_coefsSEXP, SEXP SrSEXP, SEXP SeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type rho1(rho1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type white_coefs(white_coefsSEXP);
    Rcpp::traits::input_parameter< int >::type idx_intcpt(idx_intcptSEXP);
    Rcpp::traits::input_parameter< int >::type n_resps(n_respsSEXP);
    Rcpp::traits::input_parameter< double >::type n_obs(n_obsSEXP);
    Rcpp::traits::input_parameter< double >::type n_nodes(n_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type n_coefs(n_coefsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sr(SrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Se(SeSEXP);
    rcpp_result_gen = Rcpp::wrap(grad0cpp_conti_noint(w, beta, mu, rho, alpha, rho1, X, Y, white_coefs, idx_intcpt, n_resps, n_obs, n_nodes, n_coefs, Sr, Se));
    return rcpp_result_gen;
END_RCPP
}
// grad0cpp_multi
arma::vec grad0cpp_multi(arma::vec w, arma::vec beta, arma::vec mu, double rho, double alpha, double rho1, arma::mat X, arma::mat Y, arma::mat white_coefs, int idx_intcpt, int n_resps, double n_obs, double n_nodes, int n_coefs, arma::mat Sr, arma::mat Se, arma::mat SSr);
RcppExport SEXP _noteargis_grad0cpp_multi(SEXP wSEXP, SEXP betaSEXP, SEXP muSEXP, SEXP rhoSEXP, SEXP alphaSEXP, SEXP rho1SEXP, SEXP XSEXP, SEXP YSEXP, SEXP white_coefsSEXP, SEXP idx_intcptSEXP, SEXP n_respsSEXP, SEXP n_obsSEXP, SEXP n_nodesSEXP, SEXP n_coefsSEXP, SEXP SrSEXP, SEXP SeSEXP, SEXP SSrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type rho1(rho1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type white_coefs(white_coefsSEXP);
    Rcpp::traits::input_parameter< int >::type idx_intcpt(idx_intcptSEXP);
    Rcpp::traits::input_parameter< int >::type n_resps(n_respsSEXP);
    Rcpp::traits::input_parameter< double >::type n_obs(n_obsSEXP);
    Rcpp::traits::input_parameter< double >::type n_nodes(n_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type n_coefs(n_coefsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sr(SrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Se(SeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type SSr(SSrSEXP);
    rcpp_result_gen = Rcpp::wrap(grad0cpp_multi(w, beta, mu, rho, alpha, rho1, X, Y, white_coefs, idx_intcpt, n_resps, n_obs, n_nodes, n_coefs, Sr, Se, SSr));
    return rcpp_result_gen;
END_RCPP
}
// obj0cpp_conti_int
double obj0cpp_conti_int(arma::vec w, arma::vec beta, arma::vec mu, double rho, double alpha, double rho1, arma::mat X, arma::mat Y, arma::mat white_coefs, int idx_intcpt, int n_resps, double n_obs, double n_nodes, int n_coefs, arma::mat Sr, arma::mat Se);
RcppExport SEXP _noteargis_obj0cpp_conti_int(SEXP wSEXP, SEXP betaSEXP, SEXP muSEXP, SEXP rhoSEXP, SEXP alphaSEXP, SEXP rho1SEXP, SEXP XSEXP, SEXP YSEXP, SEXP white_coefsSEXP, SEXP idx_intcptSEXP, SEXP n_respsSEXP, SEXP n_obsSEXP, SEXP n_nodesSEXP, SEXP n_coefsSEXP, SEXP SrSEXP, SEXP SeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type rho1(rho1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type white_coefs(white_coefsSEXP);
    Rcpp::traits::input_parameter< int >::type idx_intcpt(idx_intcptSEXP);
    Rcpp::traits::input_parameter< int >::type n_resps(n_respsSEXP);
    Rcpp::traits::input_parameter< double >::type n_obs(n_obsSEXP);
    Rcpp::traits::input_parameter< double >::type n_nodes(n_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type n_coefs(n_coefsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sr(SrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Se(SeSEXP);
    rcpp_result_gen = Rcpp::wrap(obj0cpp_conti_int(w, beta, mu, rho, alpha, rho1, X, Y, white_coefs, idx_intcpt, n_resps, n_obs, n_nodes, n_coefs, Sr, Se));
    return rcpp_result_gen;
END_RCPP
}
// obj0cpp_conti_noint
double obj0cpp_conti_noint(arma::vec w, arma::vec beta, arma::vec mu, double rho, double alpha, double rho1, arma::mat X, arma::mat Y, arma::mat white_coefs, int idx_intcpt, int n_resps, double n_obs, double n_nodes, int n_coefs, arma::mat Sr, arma::mat Se);
RcppExport SEXP _noteargis_obj0cpp_conti_noint(SEXP wSEXP, SEXP betaSEXP, SEXP muSEXP, SEXP rhoSEXP, SEXP alphaSEXP, SEXP rho1SEXP, SEXP XSEXP, SEXP YSEXP, SEXP white_coefsSEXP, SEXP idx_intcptSEXP, SEXP n_respsSEXP, SEXP n_obsSEXP, SEXP n_nodesSEXP, SEXP n_coefsSEXP, SEXP SrSEXP, SEXP SeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type rho1(rho1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type white_coefs(white_coefsSEXP);
    Rcpp::traits::input_parameter< int >::type idx_intcpt(idx_intcptSEXP);
    Rcpp::traits::input_parameter< int >::type n_resps(n_respsSEXP);
    Rcpp::traits::input_parameter< double >::type n_obs(n_obsSEXP);
    Rcpp::traits::input_parameter< double >::type n_nodes(n_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type n_coefs(n_coefsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sr(SrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Se(SeSEXP);
    rcpp_result_gen = Rcpp::wrap(obj0cpp_conti_noint(w, beta, mu, rho, alpha, rho1, X, Y, white_coefs, idx_intcpt, n_resps, n_obs, n_nodes, n_coefs, Sr, Se));
    return rcpp_result_gen;
END_RCPP
}
// obj0cpp_multi
double obj0cpp_multi(arma::vec w, arma::vec beta, arma::vec mu, double rho, double alpha, double rho1, arma::mat X, arma::mat Y, arma::mat white_coefs, int idx_intcpt, int n_resps, double n_obs, double n_nodes, int n_coefs, arma::mat Sr, arma::mat Se);
RcppExport SEXP _noteargis_obj0cpp_multi(SEXP wSEXP, SEXP betaSEXP, SEXP muSEXP, SEXP rhoSEXP, SEXP alphaSEXP, SEXP rho1SEXP, SEXP XSEXP, SEXP YSEXP, SEXP white_coefsSEXP, SEXP idx_intcptSEXP, SEXP n_respsSEXP, SEXP n_obsSEXP, SEXP n_nodesSEXP, SEXP n_coefsSEXP, SEXP SrSEXP, SEXP SeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type rho1(rho1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type white_coefs(white_coefsSEXP);
    Rcpp::traits::input_parameter< int >::type idx_intcpt(idx_intcptSEXP);
    Rcpp::traits::input_parameter< int >::type n_resps(n_respsSEXP);
    Rcpp::traits::input_parameter< double >::type n_obs(n_obsSEXP);
    Rcpp::traits::input_parameter< double >::type n_nodes(n_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type n_coefs(n_coefsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sr(SrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Se(SeSEXP);
    rcpp_result_gen = Rcpp::wrap(obj0cpp_multi(w, beta, mu, rho, alpha, rho1, X, Y, white_coefs, idx_intcpt, n_resps, n_obs, n_nodes, n_coefs, Sr, Se));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_noteargis_grad0cpp_conti_int", (DL_FUNC) &_noteargis_grad0cpp_conti_int, 16},
    {"_noteargis_grad0cpp_conti_noint", (DL_FUNC) &_noteargis_grad0cpp_conti_noint, 16},
    {"_noteargis_grad0cpp_multi", (DL_FUNC) &_noteargis_grad0cpp_multi, 17},
    {"_noteargis_obj0cpp_conti_int", (DL_FUNC) &_noteargis_obj0cpp_conti_int, 16},
    {"_noteargis_obj0cpp_conti_noint", (DL_FUNC) &_noteargis_obj0cpp_conti_noint, 16},
    {"_noteargis_obj0cpp_multi", (DL_FUNC) &_noteargis_obj0cpp_multi, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_noteargis(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
